// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using porsOnlineApi.Models;

#nullable disable

namespace porsOnlineApi.Migrations
{
    [DbContext(typeof(SurveyDbContext))]
    partial class SurveyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("porsOnlineApi.Models.AppreciationPageEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtmlTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("LinkActive")
                        .HasColumnType("bit");

                    b.Property<string>("LinkButtonText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("LinkType")
                        .HasColumnType("int");

                    b.Property<bool>("ReloadActive")
                        .HasColumnType("bit");

                    b.Property<int>("ReloadTime")
                        .HasColumnType("int");

                    b.Property<bool>("ShareLinkActive")
                        .HasColumnType("bit");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("AppreciationPages");
                });

            modelBuilder.Entity("porsOnlineApi.Models.ChoiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AltName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ChoiceType")
                        .HasColumnType("int");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("porsOnlineApi.Models.QuestionEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool?>("AllowMultipleSelect")
                        .HasColumnType("bit");

                    b.Property<int?>("AnswerMaxLength")
                        .HasColumnType("int");

                    b.Property<int?>("AnswerMinLength")
                        .HasColumnType("int");

                    b.Property<bool>("AnswerRequired")
                        .HasColumnType("bit");

                    b.Property<int?>("AnswerType")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DescriptionTextActive")
                        .HasColumnType("bit");

                    b.Property<int>("DesktopImageLayout")
                        .HasColumnType("int");

                    b.Property<string>("HtmlDescriptionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtmlTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IconType")
                        .HasColumnType("int");

                    b.Property<int>("ImageBrightness")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ImageOrVideo")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ImagePosition")
                        .HasColumnType("int");

                    b.Property<bool>("ImageVideoActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDecimal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsThousandsSeparationEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxSelectableChoices")
                        .HasColumnType("int");

                    b.Property<int?>("MinSelectableChoices")
                        .HasColumnType("int");

                    b.Property<int>("MobileImageLayout")
                        .HasColumnType("int");

                    b.Property<long?>("NumberMaxValue")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberMinValue")
                        .HasColumnType("bigint");

                    b.Property<bool>("QuestionNumberIsHidden")
                        .HasColumnType("bit");

                    b.Property<bool?>("Randomize")
                        .HasColumnType("bit");

                    b.Property<string>("RegexPlaceholder")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("RegexType")
                        .HasColumnType("int");

                    b.Property<string>("RegexValidationMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RegexValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("RespondingDuration")
                        .HasColumnType("int");

                    b.Property<bool>("ShowCharts")
                        .HasColumnType("bit");

                    b.Property<int?>("Steps")
                        .HasColumnType("int");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<bool?>("VerticalChoices")
                        .HasColumnType("bit");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("porsOnlineApi.Models.SurveyEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("CanActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Domain")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("FolderId")
                        .HasColumnType("int");

                    b.Property<bool>("HasQuestion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStopped")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTemplate")
                        .HasColumnType("bit");

                    b.Property<string>("LabelsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastResponseDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PreviewCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subdomain")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SubmittedResponses")
                        .HasColumnType("int");

                    b.Property<string>("TagsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlSlug")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Active");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("FolderId");

                    b.HasIndex("PreviewCode")
                        .IsUnique();

                    b.HasIndex("ReportCode")
                        .IsUnique();

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("porsOnlineApi.Models.SurveyFolderEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SharedBy")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SharedWith")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SurveyFolders");
                });

            modelBuilder.Entity("porsOnlineApi.Models.SurveySettingsEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("AuthenticationNeeded")
                        .HasColumnType("bit");

                    b.Property<bool>("CodeAuth")
                        .HasColumnType("bit");

                    b.Property<bool>("EditResponseEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("LocalStorageIsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("NoIndex")
                        .HasColumnType("bit");

                    b.Property<bool>("PhoneNumberAuth")
                        .HasColumnType("bit");

                    b.Property<bool>("PorslineAuth")
                        .HasColumnType("bit");

                    b.Property<int?>("QuestionsRespondingDuration")
                        .HasColumnType("int");

                    b.Property<int>("RespondingDurationType")
                        .HasColumnType("int");

                    b.Property<bool>("ShowAnswerKeyAfterResponseSubmit")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowAnswerKeyAfterSurveyStop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowAnswerSheetEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowAnswerSheetToResponder")
                        .HasColumnType("bit");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId")
                        .IsUnique();

                    b.ToTable("SurveySettings");
                });

            modelBuilder.Entity("porsOnlineApi.Models.SurveyThemeEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AccentColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AnswerColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("BackgroundImageBrightness")
                        .HasColumnType("int");

                    b.Property<int>("BackgroundImageFit")
                        .HasColumnType("int");

                    b.Property<int>("BackgroundImagePosition")
                        .HasColumnType("int");

                    b.Property<int>("BackgroundImageRepeat")
                        .HasColumnType("int");

                    b.Property<int>("BackgroundImageSizePercentage")
                        .HasColumnType("int");

                    b.Property<string>("BackgroundImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ButtonColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("FontFamily")
                        .HasColumnType("int");

                    b.Property<int>("FontSize")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("QuestionColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId")
                        .IsUnique();

                    b.ToTable("SurveyThemes");
                });

            modelBuilder.Entity("porsOnlineApi.Models.WelcomePageEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DescriptionActive")
                        .HasColumnType("bit");

                    b.Property<string>("DescriptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnterText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HtmlTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("TitleActive")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("WelcomePages");
                });

            modelBuilder.Entity("porsOnlineApi.Models.AppreciationPageEntity", b =>
                {
                    b.HasOne("porsOnlineApi.Models.SurveyEntity", "Survey")
                        .WithMany("AppreciationPages")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("porsOnlineApi.Models.ChoiceEntity", b =>
                {
                    b.HasOne("porsOnlineApi.Models.QuestionEntity", "Question")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("porsOnlineApi.Models.QuestionEntity", b =>
                {
                    b.HasOne("porsOnlineApi.Models.SurveyEntity", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("porsOnlineApi.Models.SurveyEntity", b =>
                {
                    b.HasOne("porsOnlineApi.Models.SurveyFolderEntity", "Folder")
                        .WithMany("Surveys")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folder");
                });

            modelBuilder.Entity("porsOnlineApi.Models.SurveySettingsEntity", b =>
                {
                    b.HasOne("porsOnlineApi.Models.SurveyEntity", "Survey")
                        .WithOne("Settings")
                        .HasForeignKey("porsOnlineApi.Models.SurveySettingsEntity", "SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("porsOnlineApi.Models.SurveyThemeEntity", b =>
                {
                    b.HasOne("porsOnlineApi.Models.SurveyEntity", "Survey")
                        .WithOne("Theme")
                        .HasForeignKey("porsOnlineApi.Models.SurveyThemeEntity", "SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("porsOnlineApi.Models.WelcomePageEntity", b =>
                {
                    b.HasOne("porsOnlineApi.Models.SurveyEntity", "Survey")
                        .WithMany("WelcomePages")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("porsOnlineApi.Models.QuestionEntity", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("porsOnlineApi.Models.SurveyEntity", b =>
                {
                    b.Navigation("AppreciationPages");

                    b.Navigation("Questions");

                    b.Navigation("Settings");

                    b.Navigation("Theme");

                    b.Navigation("WelcomePages");
                });

            modelBuilder.Entity("porsOnlineApi.Models.SurveyFolderEntity", b =>
                {
                    b.Navigation("Surveys");
                });
#pragma warning restore 612, 618
        }
    }
}
